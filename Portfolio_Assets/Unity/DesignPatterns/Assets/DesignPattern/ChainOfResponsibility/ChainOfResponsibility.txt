Matthew Dodson

1. What is a Chain of Responsibility Design Pattern?
It is a design pattern wherein you pass a request through a series of classes. Each class inspects the request
to see if it can handle it. If it cant handle the request, then it passes it to the next class in the chain [of responsibility].

The design pattern is made up of a client, a handler and however many concrete handlers that are needed. 


2. List when to use this design pattern
This design pattern is generally used when there is a complicated set of logic for each class in the chain.

3. List why we don't want to use this design pattern.
This design pattern is unneccesary when the logic used in a program is simple enough to be fitted into
basic logic grouping code (such as ifs, else/ifs or case statements).


https://www.psclistens.com/insight/blog/the-chain-of-responsiblity-pattern-and-a-light-touch-of-the-microsoft-unity-framework/